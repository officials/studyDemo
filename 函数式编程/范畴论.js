范畴论：
1.函数式编程是范畴论的数学分支，是一门很复杂的数学，认为世界上所有概念体系都可以抽象
出一个个范畴
2.彼此之间存在某种关系概念、事物、对象等等，都构成范畴。任何事物只要找出他们之间的联系
就能定义
3.箭头表示范畴成员之间的关系，正式的名称叫做“态射”。范畴论认为，同一个范畴的所有成员，
就是不同状态的“变形”。通过“态射”，一个成员可以变形成另一个成员


函数式编程基本理论：
1.函数式编程其实相对于计算机历史而言是一个非常古老的概念，甚至早于第一台计算机的诞生
函数式编程的基础模型来源于 λ (Lambda x=>x*2)演算，它是20世纪30年代引入的一套
用于研究函数定义、函数应用和递归的形式系统
2.函数式编程不是用函数来编程，也不是传统的面向过程编程。主旨在于将复杂的函数符合成
简单的函数（计算理论、或者递归论、或者拉姆达演算）。运算过程尽量写成一系列嵌套的函数调用
3.JavaScript是披着C外衣的Lisp
4.真正的火热是随着React的高阶函数而逐步升温


函数式编程1：
1.函数是一等公民，所谓“一等公民”，指的是函数与其他数据类型一样，处于平等地位，
可以赋值给其他变量，也可以作为参数，传入另一个函数，或者作为别的函数的返回值
2.不可变变量，在函数编程中，我们通常理解的变量在函数式编程中也被函数代替了：
在函数式编程中变量仅仅代表某个表达式。这里所说的“变量”是不能被修改的，所有变量只能被赋一次初始值
3.map & reduce他们是最常用的函数式编程方法


函数式编程2：
1.函数式“第一等公民”
2.只用“表达式”，不用“语句”
3.没有“副作用”
4.不修改状态
5.引用透明（函数运行只靠参数）


函数式编程常用的核心概念：

